{
  "app": {
    "title": "BizyAir",
    "restore": "restore",
    "minimize": "minimize",
    "shareCode": {
      "placeholder": "Paste share code",
      "error": {
        "empty": "Clipboard content is empty or not a string.",
        "length": "The length of the clipboard content is incorrect.",
        "shareCodeLength": "The length of the share code is incorrect."
      }
    },
    "assistant": "Assistant"
  },
  "buttons": {
    "profile": "Profile",
    "apiKey": "API Key",
    "community": "Community",
    "publish": "Publish",
    "train": "Train",
    "message": "Message",
    "news": "News",
    "examples": "Examples",
    "publishModel": "Publish Model",
    "model": "Model",
    "workflow": "Workflow",
    "docs": "Docs"
  },
  "common": {
    "language": "Language",
    "english": "English",
    "chinese": "中文"
  },
  "sidebar": {
    "assistant": {
      "title": "BizyAir Assistant",
      "clearHistory": "Clear Chat History",
      "close": "Close",
      "nodeName": "Node Name",
      "nodeType": "Node Type",
      "inputPlaceholder": "Type your message...",
      "uploadImage": "Upload Image",
      "generateImage": "Generate Image",
      "removeImage": "Remove Image",
      "sendMessage": "Send Message",
      "abortGeneration": "Abort Generation",
      "welcomeMessage": "Hello! I'm BizyAir Assistant. Click on images in nodes to upload them directly.",
      "errorMessage": "Sorry, an error occurred. Please try again later.",
      "imageUploadError": "Please upload an image file"
    }
  },
  "apiKeyDialog": {
    "title": "Set API Key",
    "placeholder": "API Key",
    "login": "Please click login to auto-fill the key, ",
    "clickToLogin": "Click to login",
    "visitTo": "or visit",
    "getKey": "to get your key and enter it manually.",
    "agreement": "Setting an API key means you agree to the",
    "userAgreement": "User Agreement",
    "and": "and",
    "privacyPolicy": "Privacy Policy.",
    "submit": "Submit",
    "close": "Close",
    "success": "API key set successfully!",
    "failed": "Failed to set API key:"
  },
  "profile": {
    "apiKey": "API Key:",
    "level": "Level:",
    "edit": "Edit",
    "shareId": {
      "label": "Share ID:",
      "edit": "Edit",
      "save": "Save",
      "copy": "Copy",
      "confirmModify": {
        "title": "Are you sure you want to modify it?",
        "desc": "If you make this change, it will cause any previously shared models to be unavailable, and you can only make this modification once a year.",
        "cancel": "No, keep it",
        "continue": "Yes, delete it"
      },
      "waitMessage": "You can only change your Share ID once a year. You'll need to wait until {date} to make changes."
    }
  },
  "messageBox": {
    "title": "Message Box",
    "markAllAsRead": "Mark all as read",
    "officialNotices": "Official Notices",
    "userForks": "User Forks",
    "receivedLikes": "Received Likes",
    "allNotifications": "All Notifications",
    "all": "All",
    "unread": "Unread",
    "read": "Read",
    "noNotifications": "No notifications",
    "notificationType": "Notification Type",
    "notificationTypes": {
      "ANNOUNCEMENT": "Announcement",
      "BILLING": "Billing",
      "REVIEW_RESULT": "Review Result",
      "USER_LIKE": "User Like",
      "USER_FORK": "User Fork"
    }
  },
  "community": {
    "edit": "Edit",
    "remove": "Remove",
    "firstPublished": "First Published:",
    "lastUpdated": "Last Updated:",
    "noIntroduction": "No introduction",
    "type": "Type",
    "baseModel": "Base Model",
    "published": "Published Time",
    "explore": "Explore",
    "quickStart": {
      "title": "Quick Start",
      "subtitle": "Get started quickly"
    },
    "workflows": {
      "title": "Workflows",
      "subtitle": "Browse all workflows",
      "loadWorkflow": {
        "success": "Workflow loaded successfully",
        "error": "Failed to load workflow: {error}",
        "notFound": "Workflow not found"
      }
    },
    "models": {
      "title": "Models",
      "subtitle": "Browse all models",
      "nodeTitle": {
        "lora": "☁️BizyAir Load Lora",
        "controlnet": "☁️BizyAir Load ControlNet Model"
      },
      "addNode": {
        "success": "Node added successfully",
        "error": "Failed to add node: {error}"
      }
    },
    "mine": {
      "title": "Mine",
      "contents": {
        "title": "Mine",
        "subtitle": "View my content"
      },
      "tabs": {
        "posts": "Posts",
        "forked": "Forked"
      },
      "newContent": {
        "model": "New Model",
        "workflow": "New Workflow"
      }
    },
    "filter": {
      "sort": {
        "title": "Filter",
        "options": {
          "recently": "Recently",
          "popular": "Popular",
          "downloads": "Most Downloaded",
          "most-used": "Most Used",
          "most-liked": "Most Liked",
          "most-forked": "Most Forked"
        }
      },
      "type": {
        "title": "Please enter keywords",
        "all": "All",
        "lora": "LoRA",
        "controlnet": "ControlNet",
        "model-types": "Model Types",
        "base-model": "Base Model"
      }
    },
    "emptyState": {
      "title": "No Data",
      "subtitle": "Please try selecting another base model or adjusting your filter criteria"
    },
    "modelCard": {
      "tooltips": {
        "loadWorkflow": "Load Workflow",
        "addNode": "Add Node",
        "downloaded": "Downloads",
        "used": "Usage Count",
        "forked": "Forks",
        "liked": "Likes"
      },
      "tags": {
        "new": "New"
      }
    },
    "detail": {
      "type": "Type",
      "baseModel": "Base Model",
      "unFork": "Unfork",
      "fork": "Fork",
      "addNode": "Add Node",
      "load": "Load",
      "loading": "Loading...",
      "share": "Share",
      "copy": "Copy",
      "download": "Download",
      "stats": "Statistics",
      "hash": "Hash",
      "file": "File",
      "reviews": "Review Results",
      "positive": "Verified",
      "negative": "Unverified",
      "firstPublished": "First Published:",
      "lastUpdated": "Last Updated:",
      "workflow": "Workflow",
      "model": "Model",
      "confirmUnfork": "Are you sure you want to unfork this {0}?",
      "unforkWarning": "The original model may no longer be publicly available",
      "confirmUnforkBtn": "Yes, unfork",
      "confirmDelete": "Are you sure you want to delete this {0}?",
      "deleteWarning": "This action cannot be undone",
      "confirmDeleteBtn": "Yes, delete it",
      "tooltips": {
        "like": "Like",
        "liked": "Liked",
        "modelType": "The model file type might be {0}",
        "unknownModelType": "Unknown base model type"
      },
      "edit": "Edit",
      "remove": "Remove",
      "modelNotFound": "Model not found",
      "failedFetchModelDetails": "Failed to fetch model details",
      "shareCodeCopied": "Share code copied",
      "copyFailed": "Copy failed",
      "publicVersionWarning": "Model has public versions, cannot delete",
      "modelRemovedSuccessfully": "Model removed successfully",
      "failedRemoveModel": "Failed to remove model",
      "noModelVersionsFound": "No model versions found",
      "copiedSuccessfully": "Copied successfully",
      "failedLoadWorkflow": "Failed to load workflow",
      "nodeAddedSuccessfully": "Node added successfully",
      "failedDownloadWorkflow": "Failed to download workflow",
      "failedAddNode": "Failed to add node"
    }
  },
  "publish": {
    "model": {
      "title": "Publish Model",
      "name": {
        "label": "Model Name",
        "placeholder": "Enter model name"
      },
      "type": {
        "label": "Model Type",
        "placeholder": "Select model type"
      },
      "nextStep": "Next Step",
      "addVersion": "Add Version",
      "version": {
        "name": "Version Name",
        "placeholder": "Enter version name"
      },
      "baseModel": "Base Model",
      "baseModelPlaceholder": "Select base model",
      "uploadImage": "Upload Cover",
      "introduction": "Introduction",
      "publicVisible": "Publicly Visible",
      "file": "File",
      "uploaded": "Uploaded",
      "speed": "Speed",
      "publish": "Publish",
      "confirmDelete": {
        "title": "Are you sure you want to delete this version?",
        "desc": "This action cannot be undone.",
        "cancel": "No, keep it",
        "continue": "Yes, delete it"
      },
      "errors": {
        "enterName": "Please enter model name",
        "selectType": "Please select model type",
        "enterVersion": "Please enter version name for version {index}",
        "selectBaseModel": "Please select base model for version {index}",
        "enterFilePath": "Please enter file path for version {index}"
      },
      "success": "Model published successfully"
    },
    "workflow": {
      "title": "Publish Workflow",
      "name": {
        "label": "Workflow Name",
        "placeholder": "Enter workflow name"
      },
      "nextStep": "Next Step",
      "addVersion": "Add Version",
      "version": {
        "name": "Version Name",
        "placeholder": "Enter version name"
      },
      "baseModel": "Base Model",
      "baseModelPlaceholder": "Select base model",
      "uploadImage": "Upload Cover",
      "introduction": "Introduction",
      "publicVisible": "Publicly Visible",
      "file": "File",
      "uploaded": "Uploaded",
      "speed": "Speed",
      "publish": "Publish",
      "cancel": "Cancel",
      "loadFromWorkspace": "Load from current workspace",
      "confirmDelete": {
        "title": "Are you sure you want to delete this version?",
        "desc": "This action cannot be undone.",
        "cancel": "No, keep it",
        "continue": "Yes, delete it"
      },
      "errors": {
        "enterName": "Please enter workflow name",
        "enterVersion": "Please enter version name for version {index}",
        "selectBaseModel": "Please select base model for version {index}",
        "enterFilePath": "Please enter file path for version {index}"
      },
      "success": "Workflow published successfully"
    }
  },
  "modelSelect": {
    "apply": "Apply",
    "baseModels": "Base Models"
  },
  "defaultPic": {
    "noCover": "No Cover"
  },
  "confirm": {
    "cancel": "Cancel",
    "continue": "Continue",
    "title": "Are you sure?"
  },
  "vUpload": {
    "clickOrDrag": "Click or drag files to this area to upload",
    "interrupt": "Interrupt",
    "cancel": "Cancel",
    "invalidFileFormat": "Invalid file format.",
    "inHashCalculation": "Calculating hash value",
    "uploadFailed": "Upload to OSS failed:",
    "clickToUpload": "Click to upload, please select a folder.",
    "supportFormats": "You can add up to 600 images, supporting PNG, JPG, and JPEG formats.",
    "fileNumber": "File Count",
    "uploadConfirm": "You are about to upload {0} images and {1} text files.",
    "missingCaptions": "Some images are missing caption files. Please provide caption files.",
    "modalTitle": "Prompt",
    "uploadButton": "Upload",
    "cancelButton": "Cancel",
    "uploadImage": "Upload Cover",
    "loading": "Loading",
    "foundUnfinishedUpload": "Found an unfinished upload task, will continue from breakpoint",
    "noResumeData": "Cannot find resume data",
    "resumeFailed": "Resume upload failed, please upload again",
    "tokenExpired": "Upload token expired, please upload again",
    "maxRetriesReached": "Maximum retries reached, please check network and retry manually",
    "retryFailed": "Multiple upload retries failed, please check network connection and upload again",
    "willRetryInSeconds": "Network connection interrupted, will automatically retry in {seconds} seconds",
    "retrying": "Waiting for retry attempt {count}, {seconds} seconds remaining",
    "retryingUpload": "Network restored, continuing upload",
    "uploadComplete": "Upload complete"
  },
  "btnProfile": {
    "userInfo": {
      "lazyText": "This person is lazy and left nothing behind",
      "lazyText": "This user is lazy and left nothing behind",
      "balance": "Balance",
      "coin": " Coins",
      "recharge": "Purchase",
      "giftSilverCoin": "Silver",
      "rechargeCoin": "Gold",
      "switchApiKey": "Set API Key",
      "coin": " Coins",
      "recharge": "Recharge",
      "giftSilverCoin": "Gift Silver Coins",
      "rechargeCoin": "Recharge Gold Coins",
      "switchApiKey": "Switch API Key",
      "myWallet": "My Wallet",
      "rechargeRecord": "Payment",
      "consumptionBill": "Bill"
    },
    "consumptionBill": {
      "title": "Bill",
      "enterApiKey": "Please enter API Key",
      "search": "Search",
      "billingPeriod": "Billing Period",
      "totalAmount": "Total Amount",
      "goldCoinDeduction": "Gold Coin Deduction",
      "silverCoinDeduction": "Silver Coin Deduction",
      "success": "Success",
      "failed": "Failed",
      "pending": "Pending",
      "yearlyBill": "Yearly Bill",
      "monthlyBill": "Monthly Bill",
      "dailyBill": "Daily Bill",
      "recentConsumption": "Recent Consumption",
      "recentBillDetails": "Recent 30 Minutes Consumption Details",
      "back": "Back",
      "selectAPIKey": "Select API Key"
      "rechargeRecord": "Recharge Record",
      "consumptionBill": "Consumption Bill"
    },
    "uploadInfo": {
      "nickname": "Nickname",
      "signature": "Signature",
      "nameValidation": "Please enter a name",
      "realNameAuth": "Real Name Authentication",
      "authenticated": "Authenticated",
      "authenticate": "Authenticate",
      "authFailed": "Authentication Failed",
      "needAuthOnSiliconflow": "Need to authenticate on siliconflow",
      "goTo": "Go to",
      "cancel": "Cancel",
      "completed": "I have completed authentication",
      "retry": "Retry",
      "confirm": "Confirm"
    },
    "coinsList": {
      "viewExpiring": "View your expiring BZ coins list and filter them.",
      "expiringGoldTotal": "Expiring Gold Coins Total",
      "expiringSilverTotal": "Expiring Silver Coins Total",
      "all": "All",
      "silverCoin": "Silver Coins",
      "goldCoin": "Gold Coins",
      "amount": "Amount",
      "expiryTime": "Expiry Time",
      "inOneDay": "Within 1 day",
      "inSevenDays": "Within 7 days",
      "inFifteenDays": "Within 15 days",
      "inThirtyDays": "Within 30 days",
      "inOneYear": "Within 1 year",
      "myBZCoins": "My BZ Coins"
    },
    "record": {
      "rechargeRecord": "Recharge Record",
      "bzCoinRecharge": "BZ Coin Recharge",
      "orderStatus": "Order Status",
      "selectOrder": "Select Order",
      "orderNumber": "Order Number",
      "productName": "Product Name",
      "transactionTime": "Transaction Time",
      "transactionAmount": "Transaction Amount",
      "status": "Order Status",
      "operations": "Operations",
      "pay": "Pay",
      "unknown": "Unknown",
      "wechatPay": "WeChat Pay",
      "expireQrCode": "QR code will expire in {0}",
      "qrCodeExpired": "QR code expired, please click to refresh",
      "all": "All",
      "paySuccess": "Payment Successful",
      "notPaid": "Not Paid",
      "refund": "Refund",
      "refundProcessing": "Refund Processing",
      "refundSuccess": "Refund Successful",
      "refundClosed": "Refund Closed",
      "refundAbnormal": "Refund Abnormal",
      "refundOrder": "Refund Order",
      "minute": "min",
      "second": "sec",
      "orderCreationFailed": "Order creation failed",
      "confirmCancel": "Are you sure you want to cancel this order?",
      "proceed": "Proceed",
      "cancel": "Cancel"
    },
    "product": {
      "coin": "Coins",
      "confirmAgreement": "By confirming payment, you agree to the platform's",
      "rechargeAgreement": "「Recharge Agreement」",
      "coinValidityNote": "Note: Gold coins are valid for 1 year",
      "actualPayment": "Actual Payment",
      "coin": "Coins",
      "confirmAgreement": "Confirming payment means you agree to the platform's",
      "rechargeAgreement": "\"Recharge Agreement\"",
      "coinValidityNote": "Note: Gold coins are valid for 1 year",
      "actualPayment": "Actual Payment",
      "pay": "Pay",
      "agreementWarning": "Please agree to the recharge agreement first",
      "wechatPay": "WeChat Pay",
      "expireQrCode": "QR code will expire after {0}",
      "qrCodeExpired": "QR code has expired, please click to refresh",
      "paySuccess": "Payment Success"
      "expireQrCode": "QR code will expire in {0}",
      "qrCodeExpired": "QR code expired, please click to refresh",
      "paySuccess": "Payment Successful"
    },
    "avatar": {
      "avatar": "Avatar"
    },
    "index": {
      "profile": "Profile"
    },
    "consumptionBill": {
      "title": "Consumption Bill",
      "enterApiKey": "Please enter API Key",
      "search": "Search",
      "billingPeriod": "Billing Period",
      "totalAmount": "Total Amount",
      "goldCoinDeduction": "Gold Coin Deduction",
      "silverCoinDeduction": "Silver Coin Deduction",
      "success": "Success",
      "failed": "Failed",
      "pending": "Pending",
      "yearlyBill": "Yearly Bill",
      "monthlyBill": "Monthly Bill",
      "dailyBill": "Daily Bill",
      "recentConsumption": "Recent Consumption",
      "recentBillDetails": "Expense details for the last 30 minutes",
      "back": "Back",
      "selectAPIKey": "Select API Key",
      "dailyBill2": "Daily Bill",
      "time": "Time"
    }
  },
  "purchaseDoc": {
    "title": "BizyAir Recharge Service Agreement",
    "service": {
      "title": "I. Service Definition",
      "platform": "BizyAir platform (hereinafter referred to as \"the Platform\") authorizes users to use platform features including but not limited to BizyAir node services and task execution by providing virtual \"BZ Coins\" products.",
      "types": "BZ Coins are divided into two categories:",
      "gold": "Gold Coins: BZ Coins directly purchased by users through recharge, with validity period and limited refund rights;",
      "silver": "Silver Coins: BZ Coins gifted through activities, membership benefits, etc., with validity period and not refundable or cashable."
    },
    "rules": {
      "title": "II. BZ Coin Rules",
      "acquisition": {
        "title": "1. Acquisition and Usage",
        "methods": "Users can purchase Gold Coins through recharge, or obtain Silver Coins through platform activities, membership subscription, etc.",
        "usage": "BZ Coins can only be used for designated platform services (such as node resource consumption, task execution, etc.), and cannot be transferred, bought, sold, or exchanged for cash."
      },
      "validity": {
        "title": "2. Validity Period and Refund",
        "table": {
          "type": "Type",
          "validPeriod": "Validity Period",
          "refundRule": "Refund Rule",
          "gold": {
            "period": "1 year (from recharge date)",
            "rule": "Can apply for refund proportionally to remaining amount within 180 days of recharge (subject to service fee)"
          },
          "silver": {
            "period": "According to activity rules",
            "rule": "Non-refundable, non-cashable"
          }
        }
      },
      "billing": {
        "title": "3. Billing Rules",
        "nodeTypes": {
          "title": "3.1 Node Classification Billing",
          "desc": "The platform implements differentiated billing strategies for various nodes, specifically divided into two categories:",
          "goldOnly": "Gold Coin Only Nodes: Accept only Gold Coin payment (node details page will clearly mark \"Gold Coins Only\");",
          "mixed": "Mixed Payment Nodes: Support both Gold and Silver Coin payments (defaulting to \"Silver Coins First\" deduction principle)."
        },
        "execution": {
          "title": "3.2 Billing Execution Rules",
          "rule1": "When using mixed payment nodes, the system prioritizes deducting Silver Coins, automatically deducting Gold Coins when Silver Coin balance is insufficient;",
          "rule2": "When using Gold Coin only nodes, only Gold Coin balance is deducted;",
          "rule3": "If the corresponding coin balance is insufficient, the system will immediately pause the node service and send a balance alert notification."
        },
        "special": {
          "title": "3.3 Special Notes",
          "desc": "Node types and billing methods may change due to operational adjustments. Actual billing rules are subject to the node details page at the time of service use."
        }
      }
    },
    "userRights": {
      "title": "III. User Rights and Obligations",
      "recharge": {
        "title": "Recharge Confirmation",
        "content": "After successful recharge, users can check BZ Coin balance and validity period in their account."
      },
      "refund": {
        "title": "Refund Application",
        "content": "Gold Coin refunds must be submitted through platform customer service. Refund amount is calculated based on remaining validity period proportion (service fee details are published on the platform)."
      },
      "restriction": {
        "title": "Usage Restrictions",
        "content": "It is prohibited to obtain BZ Coins through unofficial channels or exploit system vulnerabilities for profit. Violators may have their accounts frozen and be held accountable."
      }
    },
    "platformRights": {
      "title": "IV. Platform Rights and Obligations",
      "service": {
        "title": "Service Adjustment",
        "content": "The platform has the right to adjust BZ Coin rules, pricing, or service content due to operational, policy, or other reasons, and will notify users through announcements/in-site messages."
      },
      "abnormal": {
        "title": "Abnormal Handling",
        "content": "If account abnormalities are detected (such as malicious coin accumulation), the platform may suspend service and recover illegally obtained benefits."
      },
      "disclaimer": {
        "title": "Disclaimer",
        "content": "The platform is not liable for losses caused by force majeure or user violations."
      }
    },
    "userBehavior": {
      "title": "V. User Behavior Standards and Breach Liability",
      "prohibited": {
        "title": "1. Prohibited Behavior Clauses",
        "desc": "When using BizyAir platform services, users must strictly adhere to the following behavior guidelines:",
        "item1": "Strictly prohibited from using any technical means to modify platform service content, service period, transaction amount, or consumption records without authorization.",
        "item2": "Prohibited from providing account or service privileges to third parties in any way not approved by the platform (including but not limited to lending, renting, selling, sharing, etc.).",
        "item3": "Strictly prohibited from cracking, tampering with, reverse engineering, or performing other destructive operations on the platform's security protection system.",
        "item4": "Without written authorization from the platform, service content may not be displayed or disseminated in any public venue (online or offline) (except for fair use cases).",
        "item5": "Must not engage in any behavior that violates laws, regulations, this agreement, or infringes on the legitimate rights and interests of the platform and third parties."
      },
      "breach": {
        "title": "2. Breach Handling Measures",
        "desc": "If users violate this agreement or relevant laws and regulations, the BizyAir platform has the right to take the following measures based on the severity of the situation:",
        "item1": "Handle according to special provisions in relevant clauses of this agreement.",
        "item2": "Take necessary technical measures to stop violations, including but not limited to deleting violating content, restricting account functions, or suspending service access privileges.",
        "item3": "Unilaterally terminate part or all services, with no refund of fees already paid, and users have no right to request any form of compensation."
      }
    },
    "other": {
      "title": "VI. Other Clauses",
      "agreement": {
        "title": "Agreement Changes",
        "content": "Continued use of services after this agreement is revised is considered acceptance of the new terms."
      },
      "dispute": {
        "title": "Dispute Resolution",
        "content": "Disputes should be resolved through negotiation; if negotiation fails, the case may be submitted to the court in the platform's location."
      }
    },
    "keyPoints": {
      "title": "Appendix: Key Clause Explanations",
      "refund": {
        "title": "Refund Example",
        "content": "If a user recharges 100 Gold Coins, uses 30%, and applies for a refund, they can receive the corresponding payment for the remaining 70 Gold Coins (minus service fee) if within 180 days of the order's effect; if beyond 180 days of the order's effect, no refund is possible."
      },
      "goldExpire": {
        "title": "Gold Coin Expiration",
        "content": "Upon expiration of the validity period, unused Gold Coins will automatically be cleared and cannot be recovered."
      },
      "silverExpire": {
        "title": "Silver Coin Expiration",
        "content": "Upon expiration of the validity period, unused Silver Coins will automatically be cleared and cannot be recovered."
      }
    }
  },
  "btnDocs": {
    "price": "Pricing Strategy",
    "doc": "Documentation"
  },
  "resumableUpload": {
    "title": "Resumable Upload",
    "uploadStatus": "Upload Status",
    "uploadProgress": "Upload Progress",
    "pauseUpload": "Pause Upload",
    "resumeUpload": "Resume Upload",
    "uploadFailed": "Upload Failed",
    "uploadSuccessful": "Upload Successful",
    "uploadPaused": "Upload Paused",
    "remainingTime": "Remaining Time",
    "uploadSpeed": "Upload Speed",
    "prepareUpload": "Preparing upload...",
    "processingFile": "Processing file...",
    "largeFileWarning": "File is large, upload may take longer",
    "unstableNetworkWarning": "Network is unstable, upload speed may be affected",
    "uploadTimedOut": "Upload timed out, please check your network connection"
  }
}
